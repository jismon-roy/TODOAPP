{"version":3,"sources":["Components/Todoapp.js","App.js","reportWebVitals.js","index.js"],"names":["Todoapp","state","input","items","handleChange","event","_this","setState","target","value","storeItems","preventDefault","concat","Object","toConsumableArray","deleteItem","key","allItems","splice","_this2","this","_this$state","react_default","a","createElement","className","onSubmit","type","onChange","placeholder","map","data","index","onClick","Component","App","Todoapp_Todoapp","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App_App"],"mappings":"mMAEqBA,oNACnBC,MAAQ,CACNC,MAAO,GACPC,MAAO,MAGTC,aAAe,SAACC,GACdC,EAAKC,SAAS,CACZL,MAAOG,EAAMG,OAAOC,WAKxBC,WAAa,SAACL,GACZA,EAAMM,iBADgB,IAEdT,EAAUI,EAAKL,MAAfC,MAERI,EAAKC,SAAS,CACZJ,MAAK,GAAAS,OAAAC,OAAAC,EAAA,EAAAD,CAAMP,EAAKL,MAAME,OAAjB,CAAwBD,IAC7BA,MAAO,QAIXa,WAAa,SAACC,GACZ,IAAMC,EAAWX,EAAKL,MAAME,MAC5Bc,EAASC,OAAOF,EAAK,GACrBV,EAAKC,SAAS,CACZJ,MAAOc,6EAIF,IAAAE,EAAAC,KAAAC,EACkBD,KAAKnB,MAAtBC,EADDmB,EACCnB,MAAOC,EADRkB,EACQlB,MAIf,OACEmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAgBC,SAAUN,KAAKV,YAC7CY,EAAAC,EAAAC,cAAA,qBAEAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLlB,MAAOP,EACP0B,SAAUR,KAAKhB,aACfyB,YAAY,oBAIhBP,EAAAC,EAAAC,cAAA,UACGrB,EAAM2B,IAAI,SAACC,EAAMC,GAAP,OACTV,EAAAC,EAAAC,cAAA,MAAIR,IAAKgB,GACND,EACDT,EAAAC,EAAAC,cAAA,KACEC,UAAU,wBACVQ,QAAS,kBAAMd,EAAKJ,WAAWiB,kBAvDVE,cCChBC,mLAEjB,OACEb,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACY,EAAD,cAJyBF,aCSlBG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHhC,EAAAC,EAAAC,cAACF,EAAAC,EAAMgC,WAAP,KACEjC,EAAAC,EAAAC,cAACgC,EAAD,QAOJnB","file":"static/js/main.27a4cb8e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Todoapp.css\";\r\nexport default class Todoapp extends Component {\r\n  state = {\r\n    input: \"\",\r\n    items: [],\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      input: event.target.value,\r\n    });\r\n    //console.log(this.state.input)\r\n  };\r\n\r\n  storeItems = (event) => {\r\n    event.preventDefault();\r\n    const { input } = this.state;\r\n\r\n    this.setState({\r\n      items: [...this.state.items, input], //spread operator (create copy of orginal array and push that copy into next session)\r\n      input: \"\",\r\n    });\r\n  };\r\n\r\n  deleteItem = (key) => {\r\n    const allItems = this.state.items;\r\n    allItems.splice(key, 1); //'splice' function is used to delete items in javascript. we use 'key' to select the item which is to be removed. 1 is used to select on;'1' is used to delete the current item only.\r\n    this.setState({\r\n      items: allItems,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { input, items } = this.state; //destructuring\r\n\r\n    //console.log(items);\r\n\r\n    return (\r\n      <div className=\"Main\">\r\n        <form className=\"Input-section\" onSubmit={this.storeItems}>\r\n          <h1>Todoapp</h1>\r\n\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Enter Items...\"\r\n          />\r\n        </form>\r\n\r\n        <ul>\r\n          {items.map((data, index) => (\r\n            <li key={index}>\r\n              {data}\r\n              <i\r\n                className=\"fa-solid fa-trash-can\"\r\n                onClick={() => this.deleteItem(index)}\r\n              ></i>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\nimport Todoapp from './Components/Todoapp'\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <Todoapp />\n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n//import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}